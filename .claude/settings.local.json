{
  "permissions": {
    "allow": [
      "Bash(pytest -q)",
      "Bash(ruff check .)",
      "Bash(python -m pip install --upgrade pip)",
      "Bash(pip install ollama pytest ruff)",
      "Bash(conda env list)",
      "Bash(conda activate codeagent)",
      "Bash(C:pinokiobinminicondaenvscodeagentpython.exe -m pytest -q)",
      "Bash(\"C:\\pinokio\\bin\\miniconda\\envs\\codeagent\\python.exe\" -m pytest -q)",
      "Bash(\"/c/pinokio/bin/miniconda/envs/codeagent/python.exe\" -m pytest -q)",
      "Bash(export PYTHONPATH=.)",
      "Bash(PYTHONPATH=. pytest -q)",
      "Bash(python -c \"import sys; print(sys.executable)\")",
      "Bash(python -c \"import sys; sys.path.insert(0, ''.''); from mathx import add; print(''mathx.add works:'', add(2, 3))\")",
      "Bash(pip install -e .)",
      "Bash(python -m pytest -q)",
      "Bash(python -m pytest tests/ -v)",
      "Bash(ruff check --fix .)",
      "Bash(ruff check agent.py --select E501)",
      "Bash(python test_context_manager.py)",
      "Bash(ruff check context_manager.py test_context_manager.py agent_integration.py)",
      "Bash(ruff check --fix context_manager.py test_context_manager.py agent_integration.py)",
      "Bash(ollama list)",
      "Bash(ollama search qwen)",
      "Bash(ollama pull qwen2.5-coder:7b)",
      "Bash(ollama pull qwen2.5-coder:3b)",
      "Bash(python diag_speed.py)",
      "Bash(OLLAMA_MODEL=qwen2.5-coder:3b python agent.py \"Add a multiply function to mathx package and write tests for it\")",
      "Bash(python -m pytest -v)",
      "Bash(OLLAMA_MODEL=qwen2.5-coder:3b python agent.py \"Create mathx package with add(a,b) and multiply(a,b) functions. Add tests for both. Run ruff and pytest.\")",
      "Bash(cat agent.log)",
      "Bash(OLLAMA_MODEL=qwen2.5-coder:7b python agent.py \"Create mathx package with add(a,b) and multiply(a,b) functions. Add tests for both. Run ruff and pytest.\")",
      "Bash(python -c \"from ollama import chat; resp = chat(model=''qwen2.5-coder:7b'', messages=[{''role'': ''user'', ''content'': ''Create a file called test.py''}], tools=[{''type'': ''function'', ''function'': {''name'': ''write_file'', ''description'': ''Write a file'', ''parameters'': {''type'': ''object'', ''properties'': {''path'': {''type'': ''string''}, ''content'': {''type'': ''string''}}, ''required'': [''path'', ''content'']}}}]); print(''Message:'', resp.get(''message'')); print(''Tool calls:'', resp.get(''message'', {}).get(''tool_calls''))\")",
      "Bash(OLLAMA_MODEL=gpt-oss:20b timeout 120 python agent.py \"Create mathx package with add and multiply functions, add tests, run ruff and pytest\")",
      "Bash(cat agent_ledger.log)",
      "Bash(python -c \"\nfrom ollama import chat\n\n# Test with gpt-oss:20b\nresp = chat(\n    model=''gpt-oss:20b'',\n    messages=[{''role'': ''user'', ''content'': ''Write hello world to test.py''}],\n    tools=[{\n        ''type'': ''function'',\n        ''function'': {\n            ''name'': ''write_file'',\n            ''description'': ''Write a file'',\n            ''parameters'': {\n                ''type'': ''object'',\n                ''properties'': {\n                    ''path'': {''type'': ''string''},\n                    ''content'': {''type'': ''string''}\n                },\n                ''required'': [''path'', ''content'']\n            }\n        }\n    }]\n)\n\nprint(''Has tool_calls:'', resp[''message''].get(''tool_calls'') is not None)\nprint(''Content:'', resp[''message''].get(''content'', '''')[:200])\n\")",
      "Bash(ollama pull llama3.2:3b)",
      "Bash(OLLAMA_MODEL=gpt-oss:20b timeout 300 python agent.py \"Create mathx package with add(a,b) and multiply(a,b) functions. Add tests for both. Run ruff and pytest.\")",
      "Bash(cat status.txt)",
      "Bash(docker --version)",
      "Bash(docker-compose build)",
      "Bash(docker-compose up -d)",
      "Bash(docker-compose exec jetbox python --version)",
      "Bash(docker-compose exec -e OLLAMA_MODEL=gpt-oss:20b jetbox python agent.py \"Create mathx package with add(a,b) and multiply(a,b) functions. Add tests for both. Run ruff and pytest.\")",
      "Bash(docker-compose exec jetbox bash -c \"ls -la mathx/ tests/ 2>/dev/null || echo ''No mathx or tests directories''\")",
      "Bash(python agent_v2.py:*)",
      "Bash(cat:*)",
      "Bash(python:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(timeout 60 python agent.py:*)",
      "Bash(ruff check:*)",
      "Bash(chmod:*)",
      "Bash(git checkout:*)",
      "Bash(timeout 10 python:*)",
      "Bash(timeout 30 python:*)",
      "Bash(timeout 15 python agent.py:*)",
      "Bash(tee:*)",
      "Bash(timeout 60 python:*)",
      "Bash(env)",
      "Bash(mkdir:*)"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "bypassPermissions"
  }
}
