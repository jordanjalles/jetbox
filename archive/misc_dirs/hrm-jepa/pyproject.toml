[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hrm-jepa"
version = "0.1.0"
description = "Local multimodal AI system combining Hierarchical Reasoning Model (HRM) with Joint Embedding Predictive Architecture (JEPA)"
authors = [
    {name = "Jordan Jalles", email = "jordanjalles@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
keywords = ["machine-learning", "multimodal", "reasoning", "local-ai", "hrm", "jepa"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "torch>=2.3.0",
    "torchvision>=0.18.0",
    "numpy>=1.26.0",
    "pillow>=10.0.0",
    "tqdm>=4.66.0",
    "pyyaml>=6.0",
    "fastapi>=0.110.0",
    "gradio>=4.0.0",
    "uvicorn>=0.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.3.0",
    "black>=24.0.0",
    "mypy>=1.9.0",
    "pre-commit>=3.6.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "ui*", "scripts*", "tools*"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q --strict-markers --disable-warnings"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "ANN", # annotations
    "C90", # mccabe complexity
    "T20", # print statements
    "SIM", # simplify
    "ARG", # unused arguments
    "PTH", # pathlib
    "RUF", # ruff-specific
]

ignore = [
    "ANN101", # missing type annotation for self
    "ANN102", # missing type annotation for cls
    "ANN401", # any type allowed
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN", "ARG"]
"scripts/*" = ["T20"]

[tool.black]
line-length = 88
target-version = ["py311", "py312"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient, tighten later
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "gradio.*",
    "fastapi.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["core", "ui", "scripts", "tools"]
omit = ["tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
